<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="45">
  <CheatEntries>
    <CheatEntry>
      <ID>19</ID>
      <Description>"Float dupe"</Description>
      <Options moAlwaysHideChildren="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>3</ID>
          <Description>"Gas dupe"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscan(INJECT,DB 74 12 C5 FA 10 83 5C 02 00 00) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:
  mov [rbx+0000025C],(float)100

code:
  vmovss xmm0,[rbx+0000025C]
  jmp return

INJECT+03:
  jmp newmem
  nop 3
return:
registersymbol(INJECT)

[DISABLE]

INJECT+03:
  db C5 FA 10 83 5C 02 00 00

unregistersymbol(INJECT)
dealloc(newmem)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>16</ID>
          <Description>"Food dupe"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscan(INJECT,C5 FA 10 8B 5C 02 00 00) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:
  mov [rbx+0000025C],(float)100

code:
  vmovss xmm1,[rbx+0000025C]
  jmp return

INJECT:
  jmp newmem
  nop 3
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db C5 FA 10 8B 5C 02 00 00

unregistersymbol(INJECT)
dealloc(newmem)
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>6</ID>
      <Description>"Money dupe"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

aobscan(INJECT,FE 48 8B 55 10 89 42 08 48 83 C4 20) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:

code:
  mov [rdx+08],#123456
  add rsp,20
  jmp return

INJECT+05:
  jmp newmem
  nop 2
return:
registersymbol(INJECT)

[DISABLE]

INJECT+05:
  db 89 42 08 48 83 C4 20

unregistersymbol(INJECT)
dealloc(newmem)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>12</ID>
      <Description>"Experience dupe"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]

{$LUA}
createTimer(500, function() memrec.active = false end)
{$ASM}

aobscan(INJECT,8B AA 10 01 00 00 39) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:
  mov [rdx+00000110],#500000

code:
  mov ebp,[rdx+00000110]
  jmp return

INJECT:
  jmp newmem
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 8B AA 10 01 00 00

unregistersymbol(INJECT)
dealloc(newmem)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>18</ID>
      <Description>"Other"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <Color>1E1E1E</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>11</ID>
          <Description>"exp dupe v2"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscan(INJECT,A8 * * * * 7F 00 00 8B 81 10 01 00 00) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:
  mov [rcx+00000110],#750

code:
  mov eax,[rcx+00000110]
  jmp return

INJECT+08:
  jmp newmem
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT+08:
  db 8B 81 10 01 00 00

unregistersymbol(INJECT)
dealloc(newmem)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>10</ID>
          <Description>"exp dupe v3"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscan(INJECT,41 FE 90 48 83 C4 30 5D C3 19 05 02 00 05 52) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:

code:
  ret 
  sbb [7FFE78B9D9C0],eax
  jmp return

INJECT+05:
  jmp newmem
  nop 5
return:
registersymbol(INJECT)

[DISABLE]

INJECT+05:
  db C4 30 5D C3 19 05 02 00 05 52

unregistersymbol(INJECT)
dealloc(newmem)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>17</ID>
          <Description>"Food dupe v2"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscan(INJECT,C5 FA 10 83 5C 02 00 00 * * * * 74) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:
  mov [rbx+0000025C],(float)100

code:
  vmovss xmm0,[rbx+0000025C]
  jmp return

INJECT:
  jmp newmem
  nop 3
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db C5 FA 10 83 5C 02 00 00

unregistersymbol(INJECT)
dealloc(newmem)
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <LuaScript>p = 'Barotrauma.exe'
n = 'BaroWare'

getApplication().Title = n
getMainForm().Caption = n
MainForm.Panel4.visible = false

createTimer(1, function()
  w = executeCodeLocalEx('user32.GetSystemMetrics',0)
  executeCodeLocalEx("user32.SetWindowPos", findWindow(nil, n), 0, w-543, 0, 550, w-872, 0)
  openProcess(p)
  getAutoAttachList().add(p)
end)

</LuaScript>
</CheatTable>
