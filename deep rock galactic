<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="45">
  <CheatEntries>
    <CheatEntry>
      <ID>113461</ID>
      <Description>"‚öîMain"</Description>
      <Options moHideChildren="1"/>
      <Color>6400C8</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>113067</ID>
          <Description>"Inf ammo"</Description>
          <Color>6400C8</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(ammo,FSD-Win64-Shipping.exe,41 8B 86 9C 06 00 00)
alloc(ammmem,$1000,ammo)

label(code)
label(return)

ammmem:
  mov [r14+69C],#321

code:
  mov eax,[r14+0000069C]
  jmp return

ammo:
  jmp ammmem
  nop 2
return:
registersymbol(ammo)

[DISABLE]

ammo:
  db 41 8B 86 9C 06 00 00

unregistersymbol(ammo)
dealloc(ammmem)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>113792</ID>
          <Description>"No spread"</Description>
          <Options moAlwaysHideChildren="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
          <Color>6400C8</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(spread,FSD-Win64-Shipping.exe,F3 0F 58 B3 3C 02 00 00 EB 08 F3 0F 10 B3)
alloc(sprmem,$1000,spread)

label(code)
label(return)

sprmem:
  mov [rbx+23C],0
  mov [rbx+240],0

code:
  addss xmm6,[rbx+0000023C]
  jmp return

spread:
  jmp sprmem
  nop 3
return:
registersymbol(spread)

[DISABLE]

spread:
  db F3 0F 58 B3 3C 02 00 00

unregistersymbol(spread)
dealloc(sprmem)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>113069</ID>
          <Description>"Rate of fire"</Description>
          <Options moHideChildren="1"/>
          <Color>6400C8</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(rapid,FSD-Win64-Shipping.exe,CC F3 0F 10 81 8C 06 00 00)
alloc(rapmem,$1000,rapid)

label(code)
label(return)
label(rapidl)

rapmem:
  push eax
  mov eax,[rapidl]
  mov [rcx+68C],eax
  pop eax

code:
  movss xmm0,[rcx+0000068C]
  jmp return

rapidl:
  dq (float)2

rapid+01:
  jmp rapmem
  nop 3
return:
registersymbol(rapid)
registersymbol(rapidl)

[DISABLE]

rapid+01:
  db F3 0F 10 81 8C 06 00 00

unregistersymbol(*)
dealloc(*)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>115490</ID>
              <Description>"speed"</Description>
              <ShowAsSigned>1</ShowAsSigned>
              <Color>6400C8</Color>
              <VariableType>Float</VariableType>
              <Address>rapidl</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>113404</ID>
          <Description>"Reload duration"</Description>
          <Options moHideChildren="1"/>
          <Color>6400C8</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(reload,FSD-Win64-Shipping.exe,F3 0F 58 86 98 06 00 00)
alloc(relmem,$1000,reload)

label(code)
label(return)
label(reloadl)

relmem:
  push eax
  mov eax,[reloadl]
  mov [rsi+698],eax
  pop eax

code:
  addss xmm0,[rsi+00000698]
  jmp return

reloadl:
  dq (float)0.5

reload:
  jmp relmem
  nop 3
return:
registersymbol(reload)
registersymbol(reloadl)

[DISABLE]

reload:
  db F3 0F 58 86 98 06 00 00

unregistersymbol(*)
dealloc(*)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>115611</ID>
              <Description>"speed"</Description>
              <ShowAsSigned>1</ShowAsSigned>
              <Color>6400C8</Color>
              <VariableType>Float</VariableType>
              <Address>reloadl</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>113765</ID>
          <Description>"God pickaxe"</Description>
          <Color>6400C8</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(pickaxe,FSD-Win64-Shipping.exe,80 BB 7C 03 00 00 00 74 3E)
alloc(picmem,$1000,pickaxe)

label(code)
label(return)

picmem:
  mov [rbx+400],#0//cd on power attack
  mov [rbx+410],#0//terrarian
  mov [rbx+414],#0//terrarian
  mov [rbx+418],#0//minerals
  mov [rbx+460],#99//rock
  mov [rbx+464],#99//dirt
  mov [rbx+468],(float)100000//damage range
  mov [rbx+46C],(float)100000//mining range
  mov [rbx+470],#0//damage radius
  mov [rbx+648],#0//prevent q mining
  mov [rbx+64C],#0//q mining delay
  mov [rbx+650],#0//q mining delay 2
  //mov r9,[rbx+3F8]
  //mov [r9+1BC],(float)10000//damage radius
  //mov [r9+1C0],(float)10000//damage radius

code:
  cmp byte ptr [rbx+0000037C],00
  jmp return

pickaxe:
  jmp picmem
  nop 2
return:
registersymbol(pickaxe)

[DISABLE]

pickaxe:
  db 80 BB 7C 03 00 00 00

unregistersymbol(pickaxe)
dealloc(picmem)
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>113462</ID>
      <Description>"üëÅVisual"</Description>
      <Options moHideChildren="1"/>
      <Color>969600</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>113266</ID>
          <Description>"No recoil"</Description>
          <Color>969600</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(recoil,FSD-Win64-Shipping.exe,F3 0F 10 42 1C 48 8B)
alloc(recmem,$1000,recoil)

label(code)
label(return)

recmem:
  mov [rdx+1C],0

code:
  movss xmm0,[rdx+1C]
  jmp return

recoil:
  jmp recmem
return:
registersymbol(recoil)

[DISABLE]

recoil:
  db F3 0F 10 42 1C

unregistersymbol(recoil)
dealloc(recmem)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>113821</ID>
          <Description>"Strong flashlight"</Description>
          <Options moHideChildren="1"/>
          <Color>969600</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(flash,FSD-Win64-Shipping.exe,F3 0F 10 8B 30 03 00 00 E8 5E)
alloc(flamem,$1000,flash)

label(code)
label(return)
label(intensity)

flamem:
  cmp byte ptr [rbx+38],#2
  jne code
  cmp [rbx+D8],#2
  jne code
  cmp [rbx+DC],#4
  jne code
  cmp byte ptr [rbx+14F],#2
  jne code
  cmp [rbx+228],(float)6500
  jne code
  cmp [rbx+32C],(float)1024
  jne code
  push eax
  mov eax,[intensity]
  mov [rbx+20C],eax//Intensity
  mov [rbx+244],(float)1//SpecularScale
  mov [rbx+330],(float)100000//AttenuationRadius
  mov [rbx+358],(float)100//InnerConeAngle
  mov [rbx+358],(float)100//OuterConeAngle
  pop eax

code:
  movss xmm1,[rbx+00000330]
  jmp return

intensity:
  dq (float)1

flash:
  jmp flamem
  nop 3
return:
registersymbol(flash)
registersymbol(intensity)

[DISABLE]

flash:
  db F3 0F 10 8B 30 03 00 00

unregistersymbol(*)
dealloc(*)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>115498</ID>
              <Description>"intensity"</Description>
              <ShowAsSigned>1</ShowAsSigned>
              <Color>969600</Color>
              <VariableType>Float</VariableType>
              <Address>intensity</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>38</ID>
          <Description>"Fov changer"</Description>
          <Options moHideChildren="1"/>
          <Color>969600</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(fov,FSD-Win64-Shipping.exe,F3 0F 10 83 F8 01 00 00 F3 0F 11)
alloc(fovmem,$1000,fov)

label(code)
label(return)
label(fovl)

fovmem:
  cmp [rbx+68],#1
  jne code
  cmp [rbx+6C],#2
  jne code
  mov r9,[fovl]
  mov [rbx+1F8],r9//k = 1.4545454545454545454545454545455

code:
  movss xmm0,[rbx+000001F8]
  jmp return

fovl:
  dq (float)120.3125//* k = 150 fov [150:103.125] [175:120.3125]

fov:
  jmp fovmem
  nop 3
return:
registersymbol(fov)
registersymbol(fovl)

[DISABLE]

fov:
  db F3 0F 10 83 F8 01 00 00

unregistersymbol(*)
dealloc(*)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>39</ID>
              <Description>"fov"</Description>
              <ShowAsSigned>1</ShowAsSigned>
              <Color>969600</Color>
              <VariableType>Float</VariableType>
              <Address>fovl</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>26392</ID>
          <Description>"Viewmodel changer"</Description>
          <Options moHideChildren="1"/>
          <Color>969600</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(viewm,FSD-Win64-Shipping.exe,F3 0F 10 90 78 02 00 00)
alloc(viemem,$1000,viewm)

label(code)
label(return)

viemem:
  mov [rax+278],(float)10//offset X
  mov [rax+27C],(float)-25//offset Y
  mov [rax+280],(float)10//offset Z

code:
  movss xmm2,[rax+00000278]
  jmp return

viewm:
  jmp viemem
  nop 3
return:
registersymbol(viewm)

[DISABLE]

viewm:
  db F3 0F 10 90 78 02 00 00

unregistersymbol(viewm)
dealloc(viemem)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>115521</ID>
          <Description>"No screen fade"</Description>
          <Color>969600</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(fades,FSD-Win64-Shipping.exe,F3 0F 10 53 58 F3 0F 10 63)
alloc(fadmem,$1000,fades)

label(code)
label(return)

fadmem:
  mov [rbx+58],0

code:
  movss xmm2,[rbx+58]
  jmp return

fades:
  jmp fadmem
return:
registersymbol(fades)

[DISABLE]

fades:
  db F3 0F 10 53 58

unregistersymbol(fades)
dealloc(fadmem)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>115683</ID>
          <Description>"Remove hands animation"</Description>
          <Color>969600</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(anim,FSD-Win64-Shipping.exe,48 8B 68 30 48 89 AF 78 04 00 00)
alloc(animem,$1000,anim)

label(code)
label(return)

animem:
  push r9
  mov r9,[rax+30]
  mov [r9+94],0
  mov [rax+40],r9
  mov [rax+48],r9
  mov [rax+58],r9
  mov [rax+60],r9
  mov [rax+68],r9
  pop r9

code:
  mov rbp,[rax+30]
  mov [rdi+00000478],rbp
  jmp return

anim:
  jmp animem
  nop 6
return:
registersymbol(anim)

[DISABLE]

anim:
  db 48 8B 68 30 48 89 AF 78 04 00 00

unregistersymbol(anim)
dealloc(animem)
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>113463</ID>
      <Description>"ü•æMovement"</Description>
      <Options moHideChildren="1"/>
      <Color>0064C8</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>113436</ID>
          <Description>"Infinity jumps"</Description>
          <Color>0064C8</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(jumps,FSD-Win64-Shipping.exe,8B 87 44 03 00 00 39)
alloc(jummem,$1000,jumps)

label(code)
label(return)

jummem:
  mov [rdi+00000344],#9999999

code:
  mov eax,[rdi+00000344]
  jmp return

jumps:
  jmp jummem
  nop
return:
registersymbol(jumps)

[DISABLE]

jumps:
  db 8B 87 44 03 00 00

unregistersymbol(jumps)
dealloc(newmem)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>115472</ID>
          <Description>"No fall damage"</Description>
          <Color>0064C8</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(falldmg,FSD-Win64-Shipping.exe,8B 80 CC 00 00 00 89 87 A4)
alloc(fadmem,$1000,falldmg)

label(code)
label(return)

fadmem:
  nop 6

code:
  //mov eax,[rax+000000CC]
  jmp return

falldmg:
  jmp fadmem
  nop
return:
registersymbol(falldmg)

[DISABLE]

falldmg:
  db 8B 80 CC 00 00 00

unregistersymbol(falldmg)
dealloc(fadmem)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>113807</ID>
          <Description>"Acceleration"</Description>
          <Color>0064C8</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(acceleration,FSD-Win64-Shipping.exe,F3 0F 10 81 A0 01 00 00)
alloc(accmem,$1000,acceleration)

label(code)
label(return)

accmem:
  mov [rcx+000001A0],(float)100000

code:
  movss xmm0,[rcx+000001A0]
  jmp return

acceleration:
  jmp accmem
  nop 3
return:
registersymbol(acceleration)

[DISABLE]

acceleration:
  db F3 0F 10 81 A0 01 00 00

unregistersymbol(acceleration)
dealloc(accmem)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>115462</ID>
          <Description>"Player scan"</Description>
          <Options moHideChildren="1"/>
          <Color>0064C8</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(player,FSD-Win64-Shipping.exe,F3 0F 10 83 8C 01 00 00 48 83)
alloc(plamem,$1000,player)
alloc(playerp,8)

label(code)
label(return)

plamem:
  mov [playerp],rbx

code:
  movss xmm0,[rbx+0000018C]
  jmp return

player:
  jmp plamem
  nop 3
return:
registersymbol(player)
registersymbol(playerp)

[DISABLE]

player:
  db F3 0F 10 83 8C 01 00 00

unregistersymbol(*)
dealloc(*)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>115465</ID>
              <Description>"gravity"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>0064C8</Color>
              <VariableType>Float</VariableType>
              <Address>playerp</Address>
              <Offsets>
                <Offset>150</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>115466</ID>
              <Description>"jump height"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>0064C8</Color>
              <VariableType>Float</VariableType>
              <Address>playerp</Address>
              <Offsets>
                <Offset>158</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>115464</ID>
              <Description>"walk speed"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>0064C8</Color>
              <VariableType>Float</VariableType>
              <Address>playerp</Address>
              <Offsets>
                <Offset>18C</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>113492</ID>
          <Description>"Player model scan"</Description>
          <Options moHideChildren="1"/>
          <Color>0064C8</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(playermodel,FSD-Win64-Shipping.exe,8B 87 3C 01 00 00 89 43)
alloc(plmmem,$1000,playermodel)
alloc(playermodelp,8)

label(code)
label(return)

plmmem:
  cmp [rdi+114],(float)75
  jne code
  cmp [rdi+118],(float)75
  jne code
  cmp [rdi+128],#0
  jne code
  cmp [rdi+130],(double)0.0078125
  jne code
  cmp [rdi+14C],#0x02004621
  jne code
  cmp [rdi+150],#256
  jne code
  mov [playermodelp],rdi

code:
  mov eax,[rdi+0000013C]
  jmp return

playermodel:
  jmp plmmem
  nop
return:
registersymbol(playermodel)
registersymbol(playermodelp)

[DISABLE]

playermodel:
  db 8B 87 3C 01 00 00

unregistersymbol(*)
dealloc(*)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>115475</ID>
              <Description>"side width"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>0064C8</Color>
              <VariableType>Double</VariableType>
              <Address>playermodelp</Address>
              <Offsets>
                <Offset>130</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>113495</ID>
              <Description>"forward width"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>0064C8</Color>
              <VariableType>Float</VariableType>
              <Address>playermodelp</Address>
              <Offsets>
                <Offset>138</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>115474</ID>
              <Description>"height"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>0064C8</Color>
              <VariableType>Float</VariableType>
              <Address>playermodelp</Address>
              <Offsets>
                <Offset>13C</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>113397</ID>
          <Description>"No collision"</Description>
          <Color>0064C8</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(collision,FSD-Win64-Shipping.exe,89 41 04 8B 42 08 89 41 08 8B 42 0C 89 41 0C 48 8B C1 C3 CC CC CC CC CC CC 8B)
alloc(colmem,$1000,collision)

label(code)
label(return)

colmem:

code:
  //mov [rcx+04],eax
  mov eax,[rdx+08]
  jmp return

collision:
  jmp colmem
  nop
return:
registersymbol(collision)

[DISABLE]

collision:
  db 89 41 04 8B 42 08

unregistersymbol(collision)
dealloc(colmem)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>5</ID>
          <Description>"No fall"</Description>
          <Color>0064C8</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(fall,FSD-Win64-Shipping.exe,F3 44 0F 11 A6 CC 00 00 00)
alloc(falmem,$1000,fall)

label(code)
label(return)

falmem:

code:
  //movss [rsi+000000CC],xmm12
  mov [rsi+000000CC],(float)7
  jmp return

fall:
  jmp falmem
  nop 4
return:
registersymbol(fall)

[DISABLE]

fall:
  db F3 44 0F 11 A6 CC 00 00 00

unregistersymbol(fall)
dealloc(falmem)
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>113464</ID>
      <Description>"üíßSpecific"</Description>
      <Options moHideChildren="1"/>
      <Color>009696</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>34504</ID>
          <Description>"Fast hook"</Description>
          <Color>FF5700</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(hook,FSD-Win64-Shipping.exe,F3 0F 11 83 D8 00 00 00 0F 8A)
alloc(hoomem,$1000,hook)

label(code)
label(return)

hoomem:

code:
  mov [rbx+000000D8],#0
  jmp return

hook:
  jmp hoomem
  nop 3
return:
registersymbol(hook)

[DISABLE]

hook:
  db F3 0F 11 83 D8 00 00 00

unregistersymbol(hook)
dealloc(hoomem)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>115616</ID>
          <Description>"God drills"</Description>
          <Color>00DCFF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(drill,FSD-Win64-Shipping.exe,F3 0F 10 86 C0 04 00 00 48)
alloc(drimem,$1000,drill)

label(code)
label(return)

drimem:
  mov [rsi+2FC],0//CurrentHeat
  mov [rsi+3C0],(float)0.001//EquipDuration
  mov [rsi+46C],(float)1//MovementPenalty
  mov [rsi+470],(float)4//MiningRate | 3
  //mov [rsi+498],(float)100000//DamageDistance | 125
  //mov [rsi+4A4],(float)99//DamageRate | ??
  mov [rsi+4C0],(float)44//Fuel

code:
  movss xmm0,[rsi+000004C0]
  jmp return

drill:
  jmp drimem
  nop 3
return:
registersymbol(drill)

[DISABLE]

drill:
  db F3 0F 10 86 C0 04 00 00

unregistersymbol(drill)
dealloc(drimem)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>26395</ID>
          <Description>"God zipline gun"</Description>
          <Color>00AF4B</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(zipline,FSD-Win64-Shipping.exe,02 8B 81 A0 06 00 00)
alloc(zipmem,$1000,zipline)

label(code)
label(return)

zipmem:
  cmp [rcx+7A0],#1
  jne code
  cmp [rcx+7A4],#4
  jne code
  mov [rcx+780],(float)1000000//MaxDistance | 1000m
  mov [rcx+784],(float)1//MinDistance | 1m
  mov [rcx+788],(float)0//MinAngle
  mov [rcx+78C],(float)90//MaxAngle

code:
  mov eax,[rcx+000006A0]
  jmp return

zipline+01:
  jmp zipmem
  nop
return:
registersymbol(zipline)

[DISABLE]

zipline+01:
  db 8B 81 A0 06 00 00

unregistersymbol(zipline)
dealloc(zipmem)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>113822</ID>
          <Description>"A+D spammer"</Description>
          <Color>009696</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$LUA}
if syntaxcheck then return end
if getForegroundProcess() ~= getOpenedProcessID() then return end
[ENABLE]

on = decodeFunction('c-oWpDNPJ!ketlRCB=/U!NS2(5ypT38s!d+42)bq517l$3MAMV92guO7#P,7+)weVjA^%G3]^@a3r{*UYGO%hNM;$okuVq31V#i2Qp64BvPnS2K._?p;}UaeU}6/;a69P0pyJ5D$j0c%.0ROzW..3{#6fBr9kHu^imNmHt[Qh@9cZpFBh)qfLQn/@M_NtZOMZDC3u}Bnydw*,aZYM#0Sg.YG[)LL:EBH82mk.z$t4s')
on()

if ~syntaxcheck then return end

[DISABLE]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>115578</ID>
          <Description>"Intoxication scan"</Description>
          <Options moHideChildren="1"/>
          <Color>6432FF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(intox,FSD-Win64-Shipping.exe,F3 0F 10 AB E0 00 00 00)
alloc(intmem,$1000,intox)
alloc(intoxp,8,intox)

label(code)
label(return)

intmem:
  mov [intoxp],rbx

code:
  movss xmm5,[rbx+000000E0]
  jmp return

intox:
  jmp intmem
  nop 3
return:
registersymbol(intox)
registersymbol(intoxp)

[DISABLE]

intox:
  db F3 0F 10 AB E0 00 00 00

unregistersymbol(*)
dealloc(*)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>115579</ID>
              <Description>"IntoxicationLevel"</Description>
              <ShowAsSigned>1</ShowAsSigned>
              <Color>6432FF</Color>
              <VariableType>4 Bytes</VariableType>
              <Address>intoxp</Address>
              <Offsets>
                <Offset>DC</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>115598</ID>
              <Description>"IntoxicationLevelTransition"</Description>
              <ShowAsSigned>1</ShowAsSigned>
              <Color>6432FF</Color>
              <VariableType>Float</VariableType>
              <Address>intoxp</Address>
              <Offsets>
                <Offset>E0</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>115580</ID>
              <Description>"IntoxicationLerpSpeed"</Description>
              <ShowAsSigned>1</ShowAsSigned>
              <Color>6432FF</Color>
              <VariableType>Float</VariableType>
              <Address>intoxp</Address>
              <Offsets>
                <Offset>E4</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>115584</ID>
              <Description>"DrunkenMovementNoiseStrength"</Description>
              <ShowAsSigned>1</ShowAsSigned>
              <Color>6432FF</Color>
              <VariableType>Float</VariableType>
              <Address>intoxp</Address>
              <Offsets>
                <Offset>110</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>115585</ID>
              <Description>"DrunkenYawNoiseStrength"</Description>
              <ShowAsSigned>1</ShowAsSigned>
              <Color>6432FF</Color>
              <VariableType>Float</VariableType>
              <Address>intoxp</Address>
              <Offsets>
                <Offset>114</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>115586</ID>
              <Description>"DrunkenPitchNoiseStrength"</Description>
              <ShowAsSigned>1</ShowAsSigned>
              <Color>6432FF</Color>
              <VariableType>Float</VariableType>
              <Address>intoxp</Address>
              <Offsets>
                <Offset>118</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>115599</ID>
              <Description>"IntoxicationVisualStrength"</Description>
              <ShowAsSigned>1</ShowAsSigned>
              <Color>6432FF</Color>
              <VariableType>Float</VariableType>
              <Address>intoxp</Address>
              <Offsets>
                <Offset>130</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>115587</ID>
              <Description>"ShoutCooldownMax"</Description>
              <ShowAsSigned>1</ShowAsSigned>
              <Color>6432FF</Color>
              <VariableType>Float</VariableType>
              <Address>intoxp</Address>
              <Offsets>
                <Offset>13C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>115588</ID>
              <Description>"ShoutCooldownMin"</Description>
              <ShowAsSigned>1</ShowAsSigned>
              <Color>6432FF</Color>
              <VariableType>Float</VariableType>
              <Address>intoxp</Address>
              <Offsets>
                <Offset>140</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>113451</ID>
          <Description>"More players [Host]"</Description>
          <Options moHideChildren="1"/>
          <Color>6432FF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(players,FSD-Win64-Shipping.exe,06 8B 81 A0 05 00 00)
alloc(plsmem,$1000,players)

label(code)
label(return)
label(amount)

plsmem:
  mov r9,[amount]
  mov [rcx+5A0],r9

code:
  mov eax,[rcx+000005A0]
  jmp return

amount:
  dq #5

players+01:
  jmp plsmem
  nop
return:
registersymbol(players)
registersymbol(amount)

[DISABLE]

players+01:
  db 8B 81 A0 05 00 00

unregistersymbol(*)
dealloc(*)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>115497</ID>
              <Description>"amount"</Description>
              <ShowAsSigned>1</ShowAsSigned>
              <VariableType>4 Bytes</VariableType>
              <Address>amount</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>113065</ID>
      <Description>"üí°Misc"</Description>
      <Options moHideChildren="1"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>113066</ID>
          <Description>"Save config"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$LUA}
if syntaxcheck then return end
[ENABLE]

name = 'DrgWare.cfg'

on = decodeFunction('c-nnZ!A^#i5S=95oDdO@$f;OeIUv,*zo5HLa5(IjsE^hCDid$bO0gZ.4*n%42XaBZ@bZhHd,0}lAeEl[2fg$,IJDy:sJE]/@}]$w:DoM]Y:7b%z=09d:F:uNu,jK/2;.gebHRX7)4D8PBid^bAO+ms5%9ebU@5BZ#[.z-LI.=!jRaXR[)rwc!mu4M@p68_.ecx#$O}T8GZ%W]8w0tp.NIN9(!S_kWbhTx%w!I.vS)dW=,#dtob_11S;?bZ$v*Jb9O}0P%3FjP#WTKJE1eo[-g3N:hJ6ta7guH%ZUnH*g5K0=1{;Wkm*#LJmfLVl;T,p8S:w,}TE:w-Fqqz;.lPL^f)7VLfj0#I/njS+75CTyAhrg66Gq2=5ghm;ecQ}Z7}}HZt_SchgBu3i((fSz[=B@bRqM)/?N*yznVauHUN*d*D+%MyPRSc+1%BmI%a.q@cBlugg)@,GK:rjZiUVvNcxS3RjH3?ac!{#[*}muK@fDbsXon_nRf?In/aOM)m*D4@!$f)RdZR.=wAtgSrDLqcV-.a7?/N6D9M:PtN#9SX/GxO[[TwO,-HRtthIKj2@qImnoeq,CGTu_3uM*J,6P,ns=W:T^:/%Eh?1lL@jV6TKM0,?jQz^[%SDudCI0/pJ60#8W0#^r.Qgarp^b#w5r(v$3L]MN*IypgpjEzK^sf3[52(#8Vs(:D5M{$Kx##EYNYi;x.O$pvdeuVtpLh@jKmJfMuEvLC?3RAgV/ya3?n5f}S)#81yfBgjr@2b#')
on()

if ~syntaxcheck then return end

[DISABLE]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>2</ID>
          <Description>"Load config"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$LUA}
if syntaxcheck then return end
[ENABLE]

on = decodeFunction('c-n/i(2G}]5T3OsYZFQVg$sWrssfZBfy5Jd=KI(}iUf#D2}u#DV3Ed:=EpncUB=k^peN4UIPny5jHtwcCx8n:0+N:@0E]WRN+q^eJUf5i=0numyfSQGg?e!cln/5BMALk59saJR]xXO6n^$PEV2eH,ET{034bmObO:_,N0!T?8$]vU/O!9@aII97C62MZj4O[tcNT3*o[#(9v9%-.WO-mnbfCUQ+];kz^KeO,fZ)/v@*2aT6fVt+St%Hq]1I:lMHI1:[Nkv[XQ+A32]Vn1}L]FSzgeASC[[z,n;$,+7Dk*UPgrqhG(4lq(Ua!M3ST,^]l,F_@3hJ#u0V;v?+ar+EMK/$6.d=;8lg[tIo*E6H%q/.QEde%^*p/.P-.?0:Ne%L8L.=Ssr.5BuPMNM=R:4O7^@SSYErZBPP.-dk9r3c;7#A@z^}OC-Yo}4KHZSljrg,vU^IPC8D?k{;yGk7G^5J)_!V26_#QQ7z;n5KzK-dO6CVrnxozk.Wv(1q3UXBz=iM3*LnzfPG)9EX1lPFltVjdGt;X=wvEfSLmRa%.vK*mS!cR_Y?W6cJ3f}Y*B[XhWNWh6SCK!*Lp7e.uL;]QXp4;qny+AF]OMqP$).0,=r=/1=sE,Ni@8-4dq.P/[U61n3K]%#6;g7aS34E+8XqHK3$fQE1+?1A6Ux+sBUd%k-Yb/aoM@ZGJGt%JK7UQe#J+Jb6$={b^3Mi;QNzl#[SZ:qI2Gm!UW5K[aiC+]10^?swV%7s}Pe!blrQpSKPBQ(aOG6-5_uK0A6P8IojJ96){]Nq:P%@R(Vr*sEI+DCm?x+Ap:RZ%.STI/)1#dkN!zQWY/Ew[F;HzHQ$Pp;=(.zC/ulxsr=s96efnvEQmCfx4@vK]6G1KF;8=VjI7e$9)_66f-xRb9V-,v{o1JVZp/yi=fWqtoZy,g(u{1L,PU$;4wMCtMrx1O')
on()

if ~syntaxcheck then return end

[DISABLE]
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <LuaScript>on = decodeFunction('c-nnYJx=1!5S[Ir^y;M2Fyb:;1(Sg=P)YN^d*SZ@MnbZM3q-Np4d/24cc.5OVY-zPK6=H?iu^ALDRAS$B@?0F.y,N4J!5dklV/ehZSiK[t}657gr*20spTmwVX4$RfC*aIat6$h;CssDXj)Sf9N/E8:--%]G5Di38+m$D]ZgN@]/d_{-}RQYZD-o}h{+S^Ukr2(9/,ub:+t1rU-^KQ+MapBd{H#!HTwh[:8PXM*MKwLVp:]iPmg],tRAP+caLykw@=6r%i!DB@:3y#kqo;I;Je5/b5cdM)4_J]2!E%Ci*ljf+5/{^Qq8kOQFo72ES.qCdM%dsgba4WxQibebfWTp]RTX![pyrD3Zu(N7,7daS9S9L*b%1B,+YypgQV9^c]Ntja^lhViZdQ5JBrMnLdh[_LQ5+2(?%FyL#ZaB)WB,WBowt_m+NT:ufitX8W%vWoc#fC+fFuJabN_]Va-HW*Dta;ET0]=g%Jh(ap,Kz.B2.0szO@S.dB{?QHa8Ib1yaw-obzPk%:D')
on()
</LuaScript>
</CheatTable>
