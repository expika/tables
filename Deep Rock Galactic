<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="45">
  <CheatEntries>
    <CheatEntry>
      <ID>113461</ID>
      <Description>"‚öîMain"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <Color>6400C8</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>113067</ID>
          <Description>"Infinity ammo"</Description>
          <LastState/>
          <Color>6400C8</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(ammo,FSD-Win64-Shipping.exe,03 81 8C 06 00 00 66)
alloc(ammmem,$1000,ammo)

label(code)
label(return)

ammmem:
  mov [rcx+0000068C],#321

code:
  add eax,[rcx+0000068C]
  jmp return

ammo:
  jmp ammmem
  nop
return:
registersymbol(ammo)

[DISABLE]

ammo:
  db 03 81 8C 06 00 00

unregistersymbol(ammo)
dealloc(ammmem)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>113792</ID>
          <Description>"No spread"</Description>
          <Options moAlwaysHideChildren="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
          <LastState/>
          <Color>6400C8</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(spread,FSD-Win64-Shipping.exe,F3 0F 10 42 1C 48 8B)
alloc(sprmem,$1000,spread)

label(code)
label(return)

sprmem:
  mov [rdx+1C],+inf

code:
  movss xmm0,[rdx+1C]
  jmp return

sprmem:
  jmp sprmem
return:
registersymbol(spread)

[DISABLE]

spread:
  db F3 0F 10 42 1C

unregistersymbol(spread)
dealloc(sprmem)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>113069</ID>
          <Description>"Rapid fire"</Description>
          <LastState/>
          <Color>6400C8</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(rapid,FSD-Win64-Shipping.exe,F3 41 0F 11 86 C8 06 00 00 41)
alloc(rapmem,$1000,rapid)

label(code)
label(return)

rapmem:

code:
  //movss [r14+000006C8],xmm0
  jmp return

rapid:
  jmp rapmem
  nop 4
return:
registersymbol(rapid)

[DISABLE]

rapid:
  db F3 41 0F 11 86 C8 06 00 00

unregistersymbol(rapid)
dealloc(rapmem)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>113404</ID>
          <Description>"Fast reload"</Description>
          <LastState/>
          <Color>6400C8</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(reload,FSD-Win64-Shipping.exe,F3 0F 5E B3 88 06 00 00 48 8B) // should be unique
alloc(relmem,$1000,reload)

label(code)
label(return)

relmem:
  mov [rbx+00000688],0

code:
  divss xmm6,[rbx+00000688]
  jmp return

reload:
  jmp relmem
  nop 3
return:
registersymbol(reload)

[DISABLE]

reload:
  db F3 0F 5E B3 88 06 00 00

unregistersymbol(reload)
dealloc(relmem)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>113765</ID>
          <Description>"1-hit terrarian"</Description>
          <LastState/>
          <Color>6400C8</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(terrarian,FSD-Win64-Shipping.exe,41 8B 9C 24 88 00 00 00)
alloc(termem,$1000,terrarian)

label(code)
label(return)

termem:

code:
  mov [r12+00000088],#1
  jmp return

terrarian:
  jmp termem
  nop 3
return:
registersymbol(terrarian)

[DISABLE]

terrarian:
  db 41 8B 9C 24 88 00 00 00

unregistersymbol(terrarian)
dealloc(termem)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>112956</ID>
          <Description>"Fast power attack"</Description>
          <LastState/>
          <Color>6400C8</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(power,FSD-Win64-Shipping.exe,F3 0F 10 87 F4 03 00 00 0F 57)
alloc(powmem,$1000,power)

label(code)
label(return)

powmem:
  mov [rdi+000003F4],#0

code:
  movss xmm0,[rdi+000003F4]
  jmp return

power:
  jmp powmem
  nop 3
return:
registersymbol(power)

[DISABLE]

power:
  db F3 0F 10 87 F4 03 00 00

unregistersymbol(power)
dealloc(powmem)
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>113462</ID>
      <Description>"üëÅVisual"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <Color>969600</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>113266</ID>
          <Description>"No recoil"</Description>
          <LastState/>
          <Color>969600</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(recoil,FSD-Win64-Shipping.exe,F3 0F 10 42 1C 48 8B)
alloc(recmem,$1000,recoil)

label(code)
label(return)

recmem:

code:
  //movss xmm0,[rdx+1C]
  jmp return

recoil:
  jmp recmem
return:
registersymbol(recoil)

[DISABLE]

recoil:
  db F3 0F 10 42 1C

unregistersymbol(recoil)
dealloc(recmem)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>113821</ID>
          <Description>"Fullbright"</Description>
          <Options moAlwaysHideChildren="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1" moAllowManualCollapseAndExpand="1"/>
          <LastState/>
          <Color>969600</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(fullbright,FSD-Win64-Shipping.exe,F3 0F 10 8B 30 03 00 00 E8 5E)
alloc(fulmem,$1000,fullbright)

label(code)
label(return)

fulmem:
  cmp [rbx+00000330],(float)1100
  jne code
  mov [rbx+00000330],(float)10000
  mov [rbx+00000338],(float)100
  mov [rbx+0000035C],(float)100

code:
  movss xmm1,[rbx+00000330]
  jmp return

fullbright:
  jmp fulmem
  nop 3
return:
registersymbol(fullbright)

[DISABLE]

fullbright:
  db F3 0F 10 8B 30 03 00 00

unregistersymbol(fullbright)
dealloc(fulmem)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>113517</ID>
          <Description>"Infinity enemy ping"</Description>
          <LastState/>
          <Color>969600</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(ping,FSD-Win64-Shipping.exe,FF 83 C8 00 00 00 48 83)
alloc(pinmem,$1000,ping)

label(code)
label(return)

pinmem:

code:
  //inc [rbx+000000C8]
  jmp return

ping:
  jmp pinmem
  nop
return:
registersymbol(ping)

[DISABLE]

ping:
  db FF 83 C8 00 00 00

unregistersymbol(ping)
dealloc(pinmem)
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>113463</ID>
      <Description>"ü•æMovement"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <Color>0064C8</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>113436</ID>
          <Description>"Infinity jumps"</Description>
          <LastState/>
          <Color>0064C8</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(jumps,FSD-Win64-Shipping.exe,8B 87 44 03 00 00 39)
alloc(jummem,$1000,jumps)

label(code)
label(return)

jummem:
  mov [rdi+00000344],#9999999

code:
  mov eax,[rdi+00000344]
  jmp return

jumps:
  jmp jummem
  nop
return:
registersymbol(jumps)

[DISABLE]

jumps:
  db 8B 87 44 03 00 00

unregistersymbol(jumps)
dealloc(newmem)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>113807</ID>
          <Description>"Acceleration"</Description>
          <LastState/>
          <Color>0064C8</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(acceleration,FSD-Win64-Shipping.exe,F3 0F 10 81 A0 01 00 00)
alloc(accmem,$1000,acceleration)

label(code)
label(return)

accmem:
  mov [rcx+000001A0],(float)100000

code:
  movss xmm0,[rcx+000001A0]
  jmp return

acceleration:
  jmp accmem
  nop 3
return:
registersymbol(acceleration)

[DISABLE]

acceleration:
  db F3 0F 10 81 A0 01 00 00

unregistersymbol(acceleration)
dealloc(accmem)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>113809</ID>
          <Description>"Walk speed"</Description>
          <Options moHideChildren="1" moAllowManualCollapseAndExpand="1"/>
          <LastState/>
          <Color>0064C8</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(walk,FSD-Win64-Shipping.exe,F3 0F 10 83 8C 01 00 00 48 83)
alloc(walmem,$1000,walk)

label(code)
label(return)
label(speed)

walmem:
  mov eax,[speed]
  mov [rbx+0000018C],eax

code:
  movss xmm0,[rbx+0000018C]
  jmp return

speed:
  dq (float)300

walk:
  jmp walmem
  nop 3
return:
registersymbol(walk)
registersymbol(speed)

[DISABLE]

walk:
  db F3 0F 10 83 8C 01 00 00

unregistersymbol(walk)
unregistersymbol(speed)
dealloc(walmem)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>115211</ID>
              <Description>"speed"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>009696</Color>
              <VariableType>Float</VariableType>
              <Address>speed</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>113316</ID>
          <Description>"Jump power"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <Color>0064C8</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(jumpp,FSD-Win64-Shipping.exe,F3 0F 11 B3 58 01 00 00 C6)
alloc(jumhmem,$1000,jumpp)
alloc(RestoreJumpPower,8)

label(code)
label(return)
label(JumpPower)

jumhmem:
  mov [RestoreJumpPower],rbx

code:
  fld qword ptr [JumpPower]
  fstp qword ptr [rbx+00000158]
  jmp return

JumpPower:
  dq (float)1750

jumpp:
  jmp jumhmem
  nop 3

return:
registersymbol(jumpp)
registersymbol(RestoreJumpPower)
registersymbol(JumpPower)

[DISABLE]
{$LUA}
  writeFloat('[RestoreJumpPower]+158',500)
{$asm}

jumpp:
  db F3 0F 11 B3 58 01 00 00

unregistersymbol(RestoreJumpPower)
dealloc(RestoreJumpPower,8)
unregistersymbol(JumpPower)
unregistersymbol(jumpp)
dealloc(jumhmem)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>113496</ID>
              <Description>"Change Me"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>3CA096</Color>
              <VariableType>Float</VariableType>
              <Address>JumpPower</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>113492</ID>
          <Description>"Height"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <Color>0064C8</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(height,FSD-Win64-Shipping.exe,8B 87 3C 01 00 00 89 43)
alloc(heimem,$1000,height)
alloc(RestorePlrHeight,8)

label(code)
label(return)
label(PlrHeight)

heimem:
  mov [RestorePlrHeight],rdi

code:
  fld qword ptr [PlrHeight]
  fstp qword ptr [rdi+0000013C]
  jmp return

PlrHeight:
  dq (float)0.2

height:
  jmp heimem
  nop
return:
registersymbol(height)
registersymbol(RestorePlrHeight)
registersymbol(PlrHeight)

[DISABLE]
{$LUA}
  writeFloat('[RestorePlrHeight]+13C',1)
{$ASM}

height:
  db 8B 87 3C 01 00 00

unregistersymbol(RestorePlrHeight)
dealloc(RestorePlrHeight,8)
unregistersymbol(PlrHeight)
unregistersymbol(height)
dealloc(heimem)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>113495</ID>
              <Description>"Chage Me"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>3CA096</Color>
              <VariableType>Float</VariableType>
              <Address>PlrHeight</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>113397</ID>
          <Description>"No collision"</Description>
          <LastState/>
          <Color>0064C8</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(collision,FSD-Win64-Shipping.exe,89 41 04 8B 42 08 89 41 08 8B 42 0C 89 41 0C 48 8B C1 C3 CC CC CC CC CC CC 8B)
alloc(colmem,$1000,collision)

label(code)
label(return)

colmem:

code:
  //mov [rcx+04],eax
  mov eax,[rdx+08]
  jmp return

collision:
  jmp colmem
  nop
return:
registersymbol(collision)

[DISABLE]

collision:
  db 89 41 04 8B 42 08

unregistersymbol(collision)
dealloc(colmem)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>5</ID>
          <Description>"No fall"</Description>
          <LastState/>
          <Color>0064C8</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(fall,FSD-Win64-Shipping.exe,F3 44 0F 11 A6 CC 00 00 00)
alloc(falmem,$1000,fall)

label(code)
label(return)

falmem:

code:
  //movss [rsi+000000CC],xmm12
  jmp return

fall:
  jmp falmem
  nop 4
return:
registersymbol(fall)

[DISABLE]

fall:
  db F3 44 0F 11 A6 CC 00 00 00

unregistersymbol(fall)
dealloc(falmem)
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>113464</ID>
      <Description>"üíßSpecific"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <Color>009696</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>34504</ID>
          <Description>"Fast hook"</Description>
          <LastState/>
          <Color>FF5700</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(hook,FSD-Win64-Shipping.exe,F3 0F 11 83 D8 00 00 00 0F 8A)
alloc(hoomem,$1000,hook)

label(code)
label(return)

hoomem:

code:
  mov [rbx+000000D8],#0
  jmp return

hook:
  jmp hoomem
  nop 3
return:
registersymbol(hook)

[DISABLE]

hook:
  db F3 0F 11 83 D8 00 00 00

unregistersymbol(hook)
dealloc(hoomem)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>113822</ID>
          <Description>"A+D spammer"</Description>
          <LastState/>
          <Color>009696</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$LUA}
[ENABLE]

on = decodeFunction('c-oWpDNPJ!ketlRCB=/U!NS2(5ypT38s!d+42)bq7nsW=0VF[NM,XLmMv%M%O9NY?1B2T@2L:@K21YhUM,QenMhLsn5g]s%/A[5IL_mQWcfA?z0_N*pTwzA21B8X33;J;.*Jm89?.nySFz/Lr7PjJ=*YJlDE_?eMP(%^#Ea{3=fDHfuDSsaM')
on()

createTimer(1, function() memrec.active = false end)

[DISABLE]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>113460</ID>
          <Description>"More players [Host]"</Description>
          <Options moHideChildren="1" moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1" moAllowManualCollapseAndExpand="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <Color>009696</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>113450</ID>
              <Description>"More Players H"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : FSD-Win64-Shipping.exe
  Version: 
  Date   : 2023-01-18
  Author : expika

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,FSD-Win64-Shipping.exe,89 86 A0 05 00 00 48 8B)
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:
  mov [rsi+000005A0],#6

code:
  mov [rsi+000005A0],eax
  jmp return

INJECT:
  jmp newmem
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 89 86 A0 05 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: FSD-Win64-Shipping.exe+16BDBF0

FSD-Win64-Shipping.exe+16BDBC5: 49 8B 40 20           - mov rax,[r8+20]
FSD-Win64-Shipping.exe+16BDBC9: 48 89 83 80 00 00 00  - mov [rbx+00000080],rax
FSD-Win64-Shipping.exe+16BDBD0: E8 6B 6C 4C 00        - call FSD-Win64-Shipping.exe+1B84840
FSD-Win64-Shipping.exe+16BDBD5: 48 8B 43 20           - mov rax,[rbx+20]
FSD-Win64-Shipping.exe+16BDBD9: 48 85 C0              - test rax,rax
FSD-Win64-Shipping.exe+16BDBDC: 40 0F 95 C7           - setne dil
FSD-Win64-Shipping.exe+16BDBE0: 48 03 F8              - add rdi,rax
FSD-Win64-Shipping.exe+16BDBE3: 8B 44 24 30           - mov eax,[rsp+30]
FSD-Win64-Shipping.exe+16BDBE7: 48 89 7B 20           - mov [rbx+20],rdi
FSD-Win64-Shipping.exe+16BDBEB: 48 8B 5C 24 38        - mov rbx,[rsp+38]
// ---------- INJECTING HERE ----------
FSD-Win64-Shipping.exe+16BDBF0: 89 86 A0 05 00 00     - mov [rsi+000005A0],eax
// ---------- DONE INJECTING  ----------
FSD-Win64-Shipping.exe+16BDBF6: 48 8B 74 24 40        - mov rsi,[rsp+40]
FSD-Win64-Shipping.exe+16BDBFB: 48 83 C4 20           - add rsp,20
FSD-Win64-Shipping.exe+16BDBFF: 5F                    - pop rdi
FSD-Win64-Shipping.exe+16BDC00: C3                    - ret 
FSD-Win64-Shipping.exe+16BDC01: CC                    - int 3 
FSD-Win64-Shipping.exe+16BDC02: CC                    - int 3 
FSD-Win64-Shipping.exe+16BDC03: CC                    - int 3 
FSD-Win64-Shipping.exe+16BDC04: CC                    - int 3 
FSD-Win64-Shipping.exe+16BDC05: CC                    - int 3 
FSD-Win64-Shipping.exe+16BDC06: CC                    - int 3 
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>113451</ID>
              <Description>"More Players Fix H"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : FSD-Win64-Shipping.exe
  Version: 
  Date   : 2023-01-18
  Author : expika

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,FSD-Win64-Shipping.exe,8B 81 A0 05 00 00 85)
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:
  mov [rcx+000005A0],#6

code:
  mov eax,[rcx+000005A0]
  jmp return

INJECT:
  jmp newmem
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 8B 81 A0 05 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: FSD-Win64-Shipping.exe+1341C1C

FSD-Win64-Shipping.exe+1341BFE: CC                    - int 3 
FSD-Win64-Shipping.exe+1341BFF: CC                    - int 3 
FSD-Win64-Shipping.exe+1341C00: 80 B9 1D 07 00 00 00  - cmp byte ptr [rcx+0000071D],00
FSD-Win64-Shipping.exe+1341C07: 74 06                 - je FSD-Win64-Shipping.exe+1341C0F
FSD-Win64-Shipping.exe+1341C09: B8 05 00 00 00        - mov eax,00000005
FSD-Win64-Shipping.exe+1341C0E: C3                    - ret 
FSD-Win64-Shipping.exe+1341C0F: 48 8B 05 D2 0E C6 04  - mov rax,[FSD-Win64-Shipping.exe+5FA2AE8]
FSD-Win64-Shipping.exe+1341C16: 8B 00                 - mov eax,[rax]
FSD-Win64-Shipping.exe+1341C18: 85 C0                 - test eax,eax
FSD-Win64-Shipping.exe+1341C1A: 7F 0F                 - jg FSD-Win64-Shipping.exe+1341C2B
// ---------- INJECTING HERE ----------
FSD-Win64-Shipping.exe+1341C1C: 8B 81 A0 05 00 00     - mov eax,[rcx+000005A0]
// ---------- DONE INJECTING  ----------
FSD-Win64-Shipping.exe+1341C22: 85 C0                 - test eax,eax
FSD-Win64-Shipping.exe+1341C24: 7F 05                 - jg FSD-Win64-Shipping.exe+1341C2B
FSD-Win64-Shipping.exe+1341C26: B8 04 00 00 00        - mov eax,00000004
FSD-Win64-Shipping.exe+1341C2B: C3                    - ret 
FSD-Win64-Shipping.exe+1341C2C: CC                    - int 3 
FSD-Win64-Shipping.exe+1341C2D: CC                    - int 3 
FSD-Win64-Shipping.exe+1341C2E: CC                    - int 3 
FSD-Win64-Shipping.exe+1341C2F: CC                    - int 3 
FSD-Win64-Shipping.exe+1341C30: 4C 8B DC              - mov r11,rsp
FSD-Win64-Shipping.exe+1341C33: 49 89 6B 18           - mov [r11+18],rbp
}
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>115207</ID>
          <Description>"coord scan"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(coords,FSD-Win64-Shipping.exe,87 30 01 00 00 48 85 C0 74 2B 0F 10 88 D0 01 00 00 48 8D 44 24 60)
alloc(coomem,$1000,coords)
alloc(coord,8)

label(code)
label(return)

coomem:
  mov [coord],rax

code:
  movups xmm1,[rax+000001D0]
  jmp return

coords+0A:
  jmp coomem
  nop 2
return:
registersymbol(coords)
registersymbol(coord)

[DISABLE]

coords+0A:
  db 0F 10 88 D0 01 00 00

unregistersymbol(coords)
unregistersymbol(coord)
dealloc(coomem)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>115209</ID>
              <Description>"x"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>coord</Address>
              <Offsets>
                <Offset>1D4</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>115210</ID>
              <Description>"y"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>coord</Address>
              <Offsets>
                <Offset>1D8</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>115208</ID>
              <Description>"z"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>coord</Address>
              <Offsets>
                <Offset>1D0</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>114465</ID>
          <Description>"cam scan"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

aobscanmodule(campose,FSD-Win64-Shipping.exe,F2 0F 10 81 88 02 00 00 F2)
alloc(cammem,$1000,campose)
alloc(campos,8)

label(code)
label(return)

cammem:
  mov [campos],rcx

code:
  movsd xmm0,[rcx+00000288]
  jmp return

campose:
  jmp cammem
  nop 3
return:
registersymbol(campose)
registersymbol(campos)

[DISABLE]

campose:
  db F2 0F 10 81 88 02 00 00

unregistersymbol(campose)
unregistersymbol(campos)
dealloc(cammem)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>114467</ID>
              <Description>"x coord"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>campos</Address>
              <Offsets>
                <Offset>28C</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>114466</ID>
              <Description>"y coord"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>campos</Address>
              <Offsets>
                <Offset>288</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>113065</ID>
      <Description>"üí°Misc"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" Activated="1" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>113066</ID>
          <Description>"Save config"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$LUA}
[ENABLE]

on = decodeFunction('c-n1H!A]/J5S]hM,lGLe.6,Wq15v#A4O;dY19}yhbJH$$6VoN#0@ZzukPq/ezqI[87grL)#dnyzH#2#8Gw0Jq^0OICoz[^40t$k,C*i]S5)wnT?m2:cu5cm1w+tZ%paO){wHN=cZo?wg0oV[$5pG2Y6WG9m+gz#13/X(phTu2A^A$Gd@?#Pr,xIYHeG#!/jh3T.b]]NtH)NL0t))Yekl=#PZxC9%f{eK_Zbyt@AON]=yF9ezmtf)//s;#EPiZ;PbD2_nTx8F2A#ajdMr:haqoYigVVV{wn5i.lcXu?LNH6lTi#zRyNvW0,kq)ua6nZhglW^5w[Zq$]R4JXiG*bZ6rP4XE7V,d(8]m}3dUfyo/4jT})*mnf7bafH6yZPo0^LiAwE')
on()

createTimer(1, function() memrec.active = false end)

[DISABLE]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>2</ID>
          <Description>"Load config"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$LUA}
[ENABLE]

on = decodeFunction('c-n1J(2G}]5T11:;%:MrloKFA4pAvZ.u,S;=.$A(5SJ:Q#??OsoNVNEXe%MH:C7CDcm,.8g$:aacnV$viAf-EVGcV#yWcn8tmejO5j:uxA1-./J+.7@cKihX,4hlOfD_-WDSxm$gaFqHXj:/40L#Ju6We=pyVhUkuQ{_l?80mj2hV/fyYlem-O^[F18re{7aee,3w@2$#8:2IE@(/bPg#Lf7chWx+c0cFiz.jv%/[[Sl.F5_($)6foTi1pHLvWQ-L@kpanUC(edyZ]jEV}:sY@t;xp1KkIcr,t?qG{=vUU#4%Liw=9Dwgvq3r^@BLF?vc=iD(L)(S2iy];72Jeacv;37r]j2n6U[WS1(IEiXUPgGI*#0NBrxbOV6n2H)0t.L8hgi,jRANON/YA*2:jg/EIhL6pMX5Aqq*dj,7.jQ)ET:j;c[;4jM!P3nX}I.@Go?$fM0hn!Wsu4Hb2.m)Aki]M$0_!CZj5vgwL)2RP%+lFm1Hu-(CV){FL(.R2Qk+/u=!cPMCSl2N?G/M4c6)g,zUvalQ!0ifV]s?v#i0@]KB[1R4=X38ALLrC2^;QQ!gaCCQH=fddAZr3lFhM0wb+K1jzTFdXu{1AvcMX@VQ@rl$t_+G@U{0SmKr63R=-Omr-jU)JY:daNQMKX2Rfq[6uq^st5')
on()

createTimer(1, function() memrec.active = false end)

[DISABLE]
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <LuaScript>on = decodeFunction('c-n/gO;fgc5S=^KjvGP_HB$KyqKB(D)jK7Vyz7+3Nu?{x:mBxq+h8_CV[Wu]gxjVS^R90A9QhGRg+ft=Si5N;POP-E?4bC/m@Uv5l=;t8@}28d4tnT$@N,AOuV/VATCmg5R^eOK8+j-ME)q8,2Kt6Whnox6^KGF?2%yaa:q!WpF7!a}7W{mR]]oYtFtBYgIyvt4!.]}vmA+SZ3?0kjRXRSRIiZu^=nyB_mj((88djr3MSG*4CGlr]G$t,b,$vJ5EJgQB;4dOr/x^EBepXD.;(d,N,]5/ALzz-=jNVsOs!;9Av}E/8*O4n%RQPN=HQUs#y@kBZ[0krXa{Wk#v4nb7/@h.Sv,gS^.8+Qg2;4/DR?UP)4%.i=h=VVO4+a)KkGN@En/fWzO#uC6U??;dqdLDf?7-(goM!0TP?,mxFN/lAMKXCm$EQ[E#oISWA4rGaN:=(K)uImj_89Z!WbFt@,l:FEHq1)V?WsMgYGd_aIk#s2.0^b$;-KJzQ#vfNh_02F*:r(#r8A,mj3xtBYD5^w4E{fi0@VnY;H')
on()
</LuaScript>
</CheatTable>
